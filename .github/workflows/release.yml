name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.4'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dpkg-scanpackages
        run: sudo apt-get update && sudo apt-get install -y dpkg-dev

      - name: Prepare APT Repository
        run: |
          mkdir -p apt-repo/dists/stable/main/binary-amd64
          mkdir -p apt-repo/dists/stable/main/binary-arm64

          for file in dist/*.deb; do
            arch=$(dpkg --info "$file" | grep Architecture | awk '{print $2}')
            if [ "$arch" = "amd64" ]; then
              cp "$file" apt-repo/dists/stable/main/binary-amd64/
            elif [ "$arch" = "arm64" ]; then
              cp "$file" apt-repo/dists/stable/main/binary-arm64/
            fi
          done

          cd apt-repo/dists/stable/main/binary-amd64
          dpkg-scanpackages . /dev/null | gzip -9c > Packages.gz
          cd ../binary-arm64
          dpkg-scanpackages . /dev/null | gzip -9c > Packages.gz
          cd ../../../../../

      - name: Generate Release File
        run: |
          cat <<EOF > apt-repo/dists/stable/Release
          Origin: fmsh
          Label: fmsh
          Suite: stable
          Codename: stable
          Architectures: amd64 arm64
          Components: main
          Description: APT repository for fmsh
          EOF

      - name: Publish APT Repository to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./apt-repo
          publish_branch: gh-pages

  macos-release:
    runs-on: macos-latest
    needs: release  
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.4'

      - name: Run GoReleaser for macOS
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --single-target
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
